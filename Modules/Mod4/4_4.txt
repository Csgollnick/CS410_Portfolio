   0x00000000000009fa <+0>:     push   %rbp
   0x00000000000009fb <+1>:     mov    %rsp,%rbp
   0x00000000000009fe <+4>:     sub    $0x30,%rsp

   0x0000000000000a02 <+8>:     mov    %fs:0x28,%rax
   0x0000000000000a0b <+17>:    mov    %rax,-0x8(%rbp)
   0x0000000000000a0f <+21>:    xor    %eax,%eax
   0x0000000000000a11 <+23>:    movq   $0x0,-0x20(%rbp)
   0x0000000000000a19 <+31>:    movq   $0x1,-0x18(%rbp)
   0x0000000000000a21 <+39>:    lea    0x201(%rip),%rsi        # 0xc29
   0x0000000000000a28 <+46>:    lea    0x2015f1(%rip),%rdi        # 0x202020 <_ZSt4cout@@GLIBCXX_3.4>
   0x0000000000000a2f <+53>:    callq  0x890 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000000a34 <+58>:    mov    %rax,%rdx
   0x0000000000000a37 <+61>:    mov    0x201592(%rip),%rax        # 0x201fd0
   0x0000000000000a3e <+68>:    mov    %rax,%rsi
   0x0000000000000a41 <+71>:    mov    %rdx,%rdi
   0x0000000000000a44 <+74>:    callq  0x8a0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000000a49 <+79>:    lea    -0x28(%rbp),%rax
   0x0000000000000a4d <+83>:    mov    %rax,%rsi
   0x0000000000000a50 <+86>:    lea    0x2016e9(%rip),%rdi        # 0x202140 <_ZSt3cin@@GLIBCXX_3.4>
   0x0000000000000a57 <+93>:    callq  0x870 <_ZNSirsERl@plt>
   0x0000000000000a5c <+98>:    mov    -0x28(%rbp),%rax

   0x0000000000000a60 <+102>:   test   %rax,%rax
   0x0000000000000a63 <+105>:   je     0xaec <main+242>
   0x0000000000000a69 <+111>:   mov    -0x28(%rbp),%rcx
   0x0000000000000a6d <+115>:   movabs $0x6666666666666667,%rdx
   0x0000000000000a77 <+125>:   mov    %rcx,%rax
   0x0000000000000a7a <+128>:   imul   %rdx
   0x0000000000000a7d <+131>:   sar    $0x2,%rdx

   0x0000000000000a81 <+135>:   mov    %rcx,%rax
   0x0000000000000a84 <+138>:   sar    $0x3f,%rax
   0x0000000000000a88 <+142>:   sub    %rax,%rdx
   0x0000000000000a8b <+145>:   mov    %rdx,%rax
   0x0000000000000a8e <+148>:   mov    %rax,-0x10(%rbp)
   0x0000000000000a92 <+152>:   mov    -0x10(%rbp),%rdx
   0x0000000000000a96 <+156>:   mov    %rdx,%rax
   0x0000000000000a99 <+159>:   shl    $0x2,%rax
   0x0000000000000a9d <+163>:   add    %rdx,%rax
   0x0000000000000aa0 <+166>:   add    %rax,%rax
   0x0000000000000aa3 <+169>:   sub    %rax,%rcx
   0x0000000000000aa6 <+172>:   mov    %rcx,%rax
   0x0000000000000aa9 <+175>:   mov    %rax,-0x10(%rbp)
   0x0000000000000aad <+179>:   mov    -0x10(%rbp),%rax
   0x0000000000000ab1 <+183>:   imul   -0x18(%rbp),%rax
   0x0000000000000ab6 <+188>:   add    %rax,-0x20(%rbp)
   0x0000000000000aba <+192>:   shlq   -0x18(%rbp)
   0x0000000000000abe <+196>:   mov    -0x28(%rbp),%rcx
   0x0000000000000ac2 <+200>:   movabs $0x6666666666666667,%rdx
   0x0000000000000acc <+210>:   mov    %rcx,%rax
   0x0000000000000acf <+213>:   imul   %rdx
   0x0000000000000ad2 <+216>:   sar    $0x2,%rdx
   0x0000000000000ad6 <+220>:   mov    %rcx,%rax
   0x0000000000000ad9 <+223>:   sar    $0x3f,%rax
   0x0000000000000add <+227>:   sub    %rax,%rdx
   0x0000000000000ae0 <+230>:   mov    %rdx,%rax
   0x0000000000000ae3 <+233>:   mov    %rax,-0x28(%rbp)
   0x0000000000000ae7 <+237>:   jmpq   0xa5c <main+98>

   0x0000000000000aec <+242>:   lea    0x155(%rip),%rsi        # 0xc48
   0x0000000000000af3 <+249>:   lea    0x201526(%rip),%rdi        # 0x202020 <_ZSt4cout@@GLIBCXX_3.4>
   0x0000000000000afa <+256>:   callq  0x890 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000000aff <+261>:   mov    %rax,%rdx
   0x0000000000000b02 <+264>:   mov    -0x20(%rbp),%rax
   0x0000000000000b06 <+268>:   mov    %rax,%rsi
   0x0000000000000b09 <+271>:   mov    %rdx,%rdi
   0x0000000000000b0c <+274>:   callq  0x8d0 <_ZNSolsEl@plt>
   0x0000000000000b11 <+279>:   mov    %rax,%rdx
   0x0000000000000b14 <+282>:   mov    0x2014b5(%rip),%rax        # 0x201fd0
   0x0000000000000b1b <+289>:   mov    %rax,%rsi
   0x0000000000000b1e <+292>:   mov    %rdx,%rdi
   0x0000000000000b21 <+295>:   callq  0x8a0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000000b26 <+300>:   mov    $0x0,%eax
   0x0000000000000b2b <+305>:   mov    -0x8(%rbp),%rsi
   0x0000000000000b2f <+309>:   xor    %fs:0x28,%rsi
   0x0000000000000b38 <+318>:   je     0xb3f <main+325>
   0x0000000000000b3a <+320>:   callq  0x8b0 <__stack_chk_fail@plt>

   0x0000000000000b3f <+325>:   leaveq 
   0x0000000000000b40 <+326>:   retq  

